  cloud_client.cpp
g:\git\cloud_backup\client\client\httplib.h(1496): error C4996: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::copy': Call to 'std::basic_string::copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  g:\比特\vs2015\vc\include\xstring(1808): note: 参见“std::basic_string<char,std::char_traits<char>,std::allocator<char>>::copy”的声明
g:\比特\vs2015\vc\include\xutility(2372): error C4996: 'std::copy::_Unchecked_iterators::_Deprecate': Call to 'std::copy' with parameters that may be unsafe - this call relies on the caller to check that the passed values are correct. To disable this warning, use -D_SCL_SECURE_NO_WARNINGS. See documentation on how to use Visual C++ 'Checked Iterators'
  g:\比特\vs2015\vc\include\xutility(2372): note: 参见“std::copy::_Unchecked_iterators::_Deprecate”的声明
  g:\boost_1_72_0\boost\algorithm\string\detail\classification.hpp(102): note: 参见对正在编译的函数 模板 实例化“_OutIt *std::copy<const char*,char*>(_InIt,_InIt,_OutIt)”的引用
          with
          [
              _OutIt=char *,
              _InIt=const char *
          ]
  g:\boost_1_72_0\boost\algorithm\string\classification.hpp(206): note: 参见对正在编译的函数 模板 实例化“boost::algorithm::detail::is_any_ofF<char>::is_any_ofF<boost::iterator_range<const char *>>(const RangeT &)”的引用
          with
          [
              RangeT=boost::iterator_range<const char *>
          ]
  g:\boost_1_72_0\boost\algorithm\string\classification.hpp(206): note: 参见对正在编译的函数 模板 实例化“boost::algorithm::detail::is_any_ofF<char>::is_any_ofF<boost::iterator_range<const char *>>(const RangeT &)”的引用
          with
          [
              RangeT=boost::iterator_range<const char *>
          ]
  g:\git\cloud_backup\client\client\cloud_client.h(116): note: 参见对正在编译的函数 模板 实例化“boost::algorithm::detail::is_any_ofF<char> boost::algorithm::is_any_of<char[3]>(const RangeT (&))”的引用
          with
          [
              RangeT=char [3]
          ]
